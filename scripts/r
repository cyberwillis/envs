#!/bin/bash -e

echo "   __  ";
echo "  /__\ ";
echo " / \// ";
echo "/ _  \ ";
echo "\/ \_/ ";
echo "       ";

RESET='\033[0m'
COLOR='\033[1;32m'

msg() {
  echo -e "${COLOR}$(date): $1${RESET}"
}

cd ${HOME}
if [[ "$#" -gt 0 ]];then
  
  PYTHON_VERSION="$1"
  
  if [[ "$#" -gt 1 ]];then
    PYTHON_ENVIRONMENT="$2"
  fi
  
fi

#[DEPRECATED]
enable_pyenv()
{
  export PYENV_ROOT=${HOME}/.pyenv
  export PATH=${PYENV_ROOT}/bin:${PATH}
  eval "$(pyenv init -)"

  pyenv local ${PYTHON_VERSION}

  export PATH=${HOME}/.local/bin:${PATH}

  export PYTHONPATH=/home/ubuntu/.pyenv/versions/${PYTHON_VERSION}/lib/python3.6/site-packages
  #export PYTHONPATH=$HOME/.local/lib/python3.6/site-packages

  export PYTHON_BIN_PATH=/home/ubuntu/.pyenv/shims/python
  #export PYTHON_BIN_PATH=/usr/bin/python3

  export PYTHON_LIB_PATH=/home/ubuntu/.pyenv/versions/${PYTHON_VERSION}/lib/python3.6/site-packages
  #export PYTHON_LIB_PATH=$HOME/.local/lib/python3.6/site-packages

  #msg "Installing Pre-requisites for docs"
  #sudo apt-get -qqy install pandoc texlive-xetex
}

enable_miniconda()
{
  export PATH="${HOME}/.local/bin:${PATH}"
  export PATH="${HOME}/anaconda/bin:${PATH}"
  source activate projects
  #source activate projects
}

if [[ ${PYTHON_ENVIRONMENT} == "pyenv" ]];then
    enable_pyenv;
elif [[ ${PYTHON_ENVIRONMENT} == "miniconda" ]];then
    enable_miniconda;
fi

sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
sudo touch /etc/apt/sources.list.d/cran.list
echo 'deb https://cloud.r-project.org/bin/linux/ubuntu xenial/' | sudo tee -a /etc/apt/sources.list.d/cran.list
echo 'deb http://archive.ubuntu.com/ubuntu bionic-backports main restricted universe' | sudo tee -a /etc/apt/sources.list.d/cran.list

msg "Installing R"
sudo apt update  -qq
sudo apt install -qqy --no-install-recommends \
                  r-base
#apt-get install r-base-dev -y

msg "Installing packages for IRKernel"
sudo apt install -qqy --no-install-recommends \
                  libssl-dev \
                  libxml2-dev \
                  libcurl4-openssl-dev \
                  libssh2-1-dev \
                  libcairo-dev \
                  libxt-dev

mkdir ${HOME}/.local/lib/R/site-library -p

export R_LIBS_USER="${HOME}/.local/lib/R/site-library"

echo '# [R]' | tee -a ${HOME}/.bashrc
echo 'export R_LIBS_USER="${HOME}/.local/lib/R/site-library"' | tee -a ${HOME}/.bashrc
R -e ".libPaths()"
sudo R -e "install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'), dependencies = TRUE)"

#sudo R -e "install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'),lib=Sys.getenv('R_LIBS_USER'), dependencies = TRUE)"
##R -e "install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'), dependencies = TRUE)"

msg "Installing R kernel for Jupyter (IRKernel)"
sudo R -e "devtools::install_github('IRkernel/IRkernel')"
R -e 'IRkernel::installspec()'