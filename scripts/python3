#!/bin/bash -e

echo "   ___       _   _                 _____  ";
echo "  / _ \_   _| |_| |__   ___  _ __ |___ /  ";
echo " / /_)/ | | | __| '_ \ / _ \| '_ \  |_ \  ";
echo "/ ___/| |_| | |_| | | | (_) | | | |___) | ";
echo "\/     \__, |\__|_| |_|\___/|_| |_|____/  ";
echo "       |___/                              ";

source /scripts/.env

RESET='\033[0m'
COLOR='\033[1;32m'

msg() {
  echo -e "${COLOR}$(date): $1${RESET}"
}

install_pyenv() {

    msg "Installing Python3 ${PYTHON_VERSION} for PyEnv"
    sudo apt install -qqy  python3-pip \
                           openssl \
                           libbz2-dev \
                           libreadline-dev \
                           libssl-dev \
                           libsqlite3-dev

    cd ${HOME}
    git clone https://github.com/pyenv/pyenv.git ${HOME}/.pyenv

    export PYENV_ROOT=${HOME}/.pyenv
    export PATH=${PYENV_ROOT}/bin:$PATH
    eval "$(pyenv init -)"
    
    echo "# [Python3 / PyEnv]" | tee -a ${HOME}/.bashrc
    echo "export PYENV_ROOT=${HOME}/.pyenv" | tee -a ${HOME}/.bashrc
    echo 'export PATH=$PYENV_ROOT/bin:$PATH' | tee -a ${HOME}/.bashrc
    echo 'eval "$(pyenv init -)"' | tee -a ${HOME}/.bashrc

    echo "export PYENV_VERSION=${PYTHON_VERSION}" |  tee -a ${HOME}/.bashrc
    echo "export PYTHONPATH=/home/ubuntu/.pyenv/versions/${PYTHON_VERSION}/lib/python3.6/site-packages" | tee -a ${HOME}/.bashrc
    echo "export PYTHON_BIN_PATH=/home/ubuntu/.pyenv/shims/python" | tee -a ${HOME}/.bashrc
    echo "export PYTHON_LIB_PATH=/home/ubuntu/.pyenv/versions/${PYTHON_VERSION}/lib/python3.6/site-packages" | tee -a ${HOME}/.bashrc

    pyenv install ${PYTHON_VERSION}
    pyenv local ${PYTHON_VERSION}
    pip install -U pip

    sudo apt remove -qqy python3-pip

    #pip --version: pip 18.1 from /home/ubuntu/.pyenv/versions/3.6.6/lib/python3.6/site-packages/pip (python 3.6)
    echo $(pip --version | cut -d" " -f4  )

    #python --version: Python 3.6.6
    echo $(python --version | cut -d" " -f2)
}

install_miniconda(){

  msg "Installing Miniconda"

    sudo apt install -qqy openssl \
                        libbz2-dev \
                        libreadline-dev \
                        libssl-dev \
                        libsqlite3-dev

    cd $HOME
    export ROOT_DIR=${HOME}/anaconda
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p ${ROOT_DIR}

    echo "# [Python3 / Miniconda]" | tee -a ${HOME}/.bashrc
    
    echo 'export PATH=${HOME}/anaconda/bin:${PATH}' | tee -a ${HOME}/.bashrc

    export PATH="${ROOT_DIR}/bin:${PATH}"

    #If your shell is Bash or a Bourne variant, enable conda for the current user with
    #echo ". /opt/anaconda/etc/profile.d/conda.sh" >> ~/.bashrc
    #or, for all users, enable conda with
    #sudo ln -s /opt/anaconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    sudo ln -s ${ROOT_DIR}/etc/profile.d/conda.sh /etc/profile.d/conda.sh

    msg "opt-out reporting errors"
    source activate
    conda config --set report_errors false

    conda create -n projects python=${PYTHON_VERSION} -y
    echo "source activate projects" | tee -a ${HOME}/.bashrc

}

if [[ "$#" -gt 0 ]];then
    PYTHON_VERSION="$1"

    if [[ "$#" -gt 1 ]];then
        PYTHON_ENVIRONMENT="$2"
    fi

fi

if [[ ${PYTHON_ENVIRONMENT} == "pyenv" ]];then
    install_pyenv;
elif [[ ${PYTHON_ENVIRONMENT} == "miniconda" ]];then
    install_miniconda;
fi

