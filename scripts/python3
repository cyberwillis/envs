#!/bin/bash -e

echo "   ___       _   _                 _____  ";
echo "  / _ \_   _| |_| |__   ___  _ __ |___ /  ";
echo " / /_)/ | | | __| '_ \ / _ \| '_ \  |_ \  ";
echo "/ ___/| |_| | |_| | | | (_) | | | |___) | ";
echo "\/     \__, |\__|_| |_|\___/|_| |_|____/  ";
echo "       |___/                              ";

RESET='\033[0m'
COLOR='\033[1;32m'

export PYTHON_VERSION=3.5

msg() {
  echo -e "${COLOR}$(date): $1${RESET}"
}

install_pyenv() {
    sudo apt-get install -yq python3-pip
    cd $HOME
    git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv

    export PYENV_ROOT=$HOME/.pyenv
    echo "export PYENV_ROOT=$HOME/.pyenv" | tee -a $HOME/.bashrc
    
    export PATH=$PYENV_ROOT/bin:$PATH
    echo 'export PATH=$PYENV_ROOT/bin:$PATH' | tee -a $HOME/.bashrc
    
    eval "$(pyenv init -)"
    echo 'eval "$(pyenv init -)"' | tee -a $HOME/.bashrc

    sudo apt install -yq openssl \
                         libbz2-dev \
                         libreadline-dev \
                         libssl-dev \
                         libsqlite3-dev

    echo "export PYENV_VERSION=$PYTHON_VERSION" |  tee -a $HOME/.bashrc

    pyenv install $PYTHON_VERSION
    #pyenv install -l

    pyenv local $PYTHON_VERSION

    pip install -U pip --user

    sudo apt remove -yq python3-pip

    #python -m venv base
    #source base/bin/activate

    #which python: /home/ubuntu/.pyenv/shims/python
    #which pip: /home/ubuntu/.pyenv/shims/pip

    #pip --version: pip 18.1 from /home/ubuntu/.pyenv/versions/3.6.6/lib/python3.6/site-packages/pip (python 3.6)
    echo $(pip --version | cut -d" " -f4  )

    #python --version: Python 3.6.6
    echo $(python --version | cut -d" " -f2)
}

install_python3() {
    msg "Installing Python3 Packages"
    sudo apt update -qq
    sudo apt install -yq \
                python3 \
                python3-dev \
                python3-tk \
                libpython3-dev \
                libpython3-stdlib \
                python3-setuptools \
                python3-numpy \
                python3-pip

    pip3 install -U pip --user

    sudo apt remove python3-pip -y
    #curl https://bootstrap.pypa.io/get-pip.py -o $HOME/get-pip.py

    export PATH=$HOME/.local/bin:$PATH
    echo 'export PATH=$HOME/.local/bin:$PATH' | tee -a $HOME/.bashrc

    _PYTHON3_BIN_PATH_=$(which python3)
    _PYTHON3_LIB_PATH_=$(python3 -c "import sys; print([x for x in sys.path if 'site-packages' in x][0])")

    export PYTHONPATH=$_PYTHON3_LIB_PATH_
    echo "export PYTHONPATH=$_PYTHON3_LIB_PATH_" | tee -a $HOME/.bashrc

    export PYTHON_BIN_PATH=$_PYTHON3_BIN_PATH_
    echo "export PYTHON_BIN_PATH=$_PYTHON3_BIN_PATH_" | tee -a $HOME/.bashrc

    export PYTHON_LIB_PATH=$_PYTHON3_LIB_PATH_
    echo "export PYTHON_LIB_PATH=$_PYTHON3_LIB_PATH_" | tee -a $HOME/.bashrc
}

install_python36() {
    msg "Upgrading Python3"
    sudo add-apt-repository ppa:deadsnakes/ppa -yq

    #Not official PPA
    sudo apt remove python3 python3.5 -y
    sudo apt purge --auto-remove python3 python3.5 -yq

    sudo rm /usr/bin/python3.5 \
            /usr/bin/python3.5m \
            /usr/bin/python3 \
            /usr/bin/python3m

    sudo rm -rf /usr/lib/python3 \
                /usr/lib/python3.5 \
                /usr/local/lib/python3.5

    sudo ln -s /usr/bin/python3.6 /usr/bin/python3
    sudo ln -s /usr/bin/python3.6m /usr/bin/python3m

    msg "Installing Python3.6 Packages"
    sudo apt update -qq
    sudo apt install -yq \
                python3.6 \
                python3.6-dev \
                python3.6-tk \
                libpython3.6 \
                libpython3.6-dev \
                libpython3.6-stdlib

    source $HOME/.bashrc

    export PATH=$HOME/.local/bin:$PATH
    echo 'export PATH=$HOME/.local/bin:$PATH' | tee -a $HOME/.bashrc

    #curl -sL https://bootstrap.pypa.io/get-pip.py | bash -
    curl https://bootstrap.pypa.io/get-pip.py -o $HOME/get-pip.py
    #chown ubuntu:ubuntu $HOME/get-pip.py
    python3 $HOME/get-pip.py --user
    rm $HOME/get-pip.py

    _PYTHON3_BIN_PATH_=$(which python3)
    _PYTHON3_LIB_PATH_=$(python3 -c "import sys; print([x for x in sys.path if 'site-packages' in x][0])")

    export PYTHONPATH=$_PYTHON3_LIB_PATH_
    echo "export PYTHONPATH=$_PYTHON3_LIB_PATH_" | tee -a $HOME/.bashrc

    export PYTHON_BIN_PATH=$_PYTHON3_BIN_PATH_
    echo "export PYTHON_BIN_PATH=$_PYTHON3_BIN_PATH_" | tee -a $HOME/.bashrc

    export PYTHON_LIB_PATH=$_PYTHON3_LIB_PATH_
    echo "export PYTHON_LIB_PATH=$_PYTHON3_LIB_PATH_" | tee -a $HOME/.bashrc
}

install_miniconda(){

  msg "Installing Miniconda"

  cd $HOME

  #From Host
  export ROOT_DIR=/opt/anaconda
  chmod +x /utils/anaconda/Miniconda3-latest-Linux-x86_64.sh
  sudo /utils/anaconda/Miniconda3-latest-Linux-x86_64.sh -b -p $ROOT_DIR
  sudo chown $USER:$USER $ROOT_DIR -R

  export PATH="$ROOT_DIR/bin:$PATH"
  echo "export PATH=$ROOT_DIR/bin:$PATH" | tee -a $HOME/.bashrc

  #If your shell is Bash or a Bourne variant, enable conda for the current user with
  #echo ". /opt/anaconda/etc/profile.d/conda.sh" >> ~/.bashrc
  #or, for all users, enable conda with
  #sudo ln -s /opt/anaconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
  sudo ln -s /opt/anaconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh

  msg "opt-out reporting errors"
  source activate
  conda config --set report_errors false
}

PARAM="3.5"
if [[ "$#" -gt 0 ]];then
    PARAM="$1"
    PYTHON_VERSION="$1"
fi

install_pyenv

#if [[ "$PARAM" == "pyenv" ]];then
#    install_pyenv;
#elif [[ "$PARAM" == "3" ]];then
#    install_python3;
#elif [[ "$PARAM" == "3.6" ]];then
#    install_python36;
#elif [[ "$PARAM" == "miniconda" ]];then
#    install_miniconda;
#else 
#  echo "Argument not found!"
#  echo "Possible Values: (3.5, 3.6, anaconda, miniconda)."
#fi